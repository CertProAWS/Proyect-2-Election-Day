AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: Election Day
Resources:
  GetVoter:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getVoter
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getVoter
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetVoter:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /voter/{voter_id}
            Method: GET
  PutVoter:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putVoter
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putVoter
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutVoter:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /voter/{voter_id}
            Method: PUT
  GetAbsentee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAbsentee
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getAbsentee
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /absentee/{absentee_id}
            Method: GET
  PutAbsentee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putAbsentee
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putAbsentee
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /absentee/{absentee_id}
            Method: PUT
  GetPollingPlace:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPollingPlace
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getPollingPlace
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /place/{place_id}
            Method: GET
  PutPollingPlace:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putPollingPlace
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putPollingPlace
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /place/{place_id}
            Method: PUT
  GetInvalidFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getInvalidFunction
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getInvalidFunction
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /cabina/{cabina_id}
            Method: GET
  PutInvalidFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putInvalidFunction
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putInvalidFunction
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /cabina/{cabina_id}
            Method: PUT
  GetDepartment:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getDepartment
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getDepartment
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /department/{department_id}
            Method: GET
  PutDepartment:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putDepartment
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putDepartment
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /department/{department_id}
            Method: PUT
  GetCity:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getCity
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getCity
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /city/{city_id}
            Method: GET
  PutCity:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putCity
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putCity
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /city/{city_id}
            Method: PUT
  GetSchool:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getSchool
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.getSchool
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /school/{school_id}
            Method: GET
  PutSchool:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putSchool
      Environment:
        Variables:
          VOTERS_TABLE:
            Ref: MyVotersTable
      Handler: infoElection.putSchool
      Runtime: python3.6
      CodeUri: s3://proyecto-elecciones1/5709c7f91861f7464fad90d8ad2ba563
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyVotersTable
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /school/{school_id}
            Method: PUT
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: my-voters-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://proyecto-elecciones1/927aeec0aae8ee3d41afc5e8798721e7
  MyVotersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: my-voters-table-app
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
