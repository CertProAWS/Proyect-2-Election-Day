openapi: 3.0.0

paths:
  /voter/{voter_id}:
    get:
      summary: Returns voter info
      parameters:
        - name: voter_id
          in: path
          required: true
          description: voter ID
        - in: query
          name: date
          required: false
          description: date
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getVoter/invocations"
        httpMethod: "POST"
    put:
      summary: Create or update new record for voter
      parameters:
        - name: voter_id
          in: path
          required: true
          description: voter ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_voter:
                  type: string
                city:
                  type: string
                school:
                  type: string
                booth:
                  type: string
                timeOfArrival:
                  type: string
                country:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putVoter/invocations"
        httpMethod: "POST"
  /absentee/{absentee_id}:
    get:
      summary: Returns absentee info
      parameters:
        - name: absentee_id
          in: path
          required: true
          description: absentee ID
        - in: query
          name: date
          required: false
          description: date
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getAbsentee/invocations"
        httpMethod: "POST"
    put:
      summary: update absentee
      parameters:
        - name: absentee_id
          in: path
          required: true
          description: absentee ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_voter:
                  type: string
                city:
                  type: string
                school:
                  type: string
                booth:
                  type: string
                country:
                  type: string
                absentee:
                  type: boolean
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putAbsentee/invocations"
        httpMethod: "POST"
  /place/{place_id}:
    get:
      summary: Place id
      parameters:
        - name: place_id
          in: path
          required: true
          description: place ID
        - in: query
          name: string
          schema:
            type: string
          required: false
          description: place info
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getPollingPlace/invocations"
        httpMethod: "POST"
    put:
      summary: put place info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                school:
                  type: string
                city:
                  type: string
                department:
                  type: string
                jpg_link:
                  type: string
                country:
                  type: string
                number_votes_party_1:
                  type: number
                number_votes_party_2:
                  type: number
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putPollingPlace/invocations"
        httpMethod: "POST"
  
 
 