openapi: 3.0.0

paths:
  /voter/{voter_id}:
    get:
      summary: Returns voter info
      parameters:
        - name: voter_id
          in: path
          required: true
          description: voter ID
        - in: query
          name: date
          required: false
          description: date
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getVoter/invocations"
        httpMethod: "POST"
    put:
      summary: Create or update new record for voter
      parameters:
        - name: voter_id
          in: path
          required: true
          description: voter ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_voter:
                  type: string
                city:
                  type: string
                school:
                  type: string
                booth:
                  type: string
                timeOfArrival:
                  type: string
                country:
                  type: string
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putVoter/invocations"
        httpMethod: "POST"
  /absentee/{absentee_id}:
    get:
      summary: Returns absentee info
      parameters:
        - name: absentee_id
          in: path
          required: true
          description: absentee ID
        - in: query
          name: date
          required: false
          description: date
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getAbsentee/invocations"
        httpMethod: "POST"
    put:
      summary: update absentee
      parameters:
        - name: absentee_id
          in: path
          required: true
          description: absentee ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_voter:
                  type: string
                city:
                  type: string
                school:
                  type: string
                booth:
                  type: string
                country:
                  type: string
                absentee:
                  type: boolean
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putAbsentee/invocations"
        httpMethod: "POST"
        
  /place/{place_id}:
    get:
      summary: Place id
      parameters:
        - name: place_id
          in: path
          required: true
          description: place ID
        - in: query
          name: string
          schema:
            type: string
          required: false
          description: place info
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getPollingPlace/invocations"
        httpMethod: "POST"
    put:
      summary: put place info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                school:
                  type: string
                city:
                  type: string
                department:
                  type: string
                jpg_link:
                  type: string
                country:
                  type: string
                number_votes_party_1:
                  type: number
                number_votes_party_2:
                  type: number
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putPollingPlace/invocations"
        httpMethod: "POST"
  
  
  /city/{city_id}:
    get:
      summary: City id
      parameters:
        - name: city_id
          in: path
          required: true
          description: city ID
        - in: query
          name: string
          required: false
          description: cabina info
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getCity/invocations"
        httpMethod: "POST"
    put:
      summary: put city info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invalido:
                  type: boolean
                department:
                  type: string
                city:
                  type: string
                school:
                  type: string
                resultadoImagen:
                  type: number
                resultadoFinal:
                  type: number
                ausentes:
                  type: number
                votosEmitidos:
                  type: number
                votosTotales:
                  type: number
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putCity/invocations"
        httpMethod: "POST"

/school/{school_id}:
    get:
      summary: School id
      parameters:
        - name: school_id
          in: path
          required: true
          description: school ID
        - in: query
          name: string
          required: false
          description: school info
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getSchool/invocations"
        httpMethod: "POST"
    put:
      summary: put school info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invalido:
                  type: boolean
                city:
                  type: string
                school:
                  type: string
                resultadoImagen:
                  type: number
                resultadoFinal:
                  type: number
                ausentes:
                  type: number
                votosEmitidos:
                  type: number
                votosTotales:
                  type: number
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putSchool/invocations"
        httpMethod: "POST"
        
/department/{department_id}:
    get:
      summary: Department id
      parameters:
        - name: department_id
          in: path
          required: true
          description: department ID
        - in: query
          name: string
          required: false
          description: department info
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:getDepartment/invocations"
        httpMethod: "POST"
    put:
      summary: put department info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invalido:
                  type: boolean
                department:
                  type: string
                city:
                  type: string
                school:
                  type: string
                resultadoImagen:
                  type: number
                resultadoFinal:
                  type: number
                ausentes:
                  type: number
                votosEmitidos:
                  type: number
                votosTotales:
                  type: number
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:putDepartment/invocations"
        httpMethod: "POST"
